<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Witty Writeups</title>
    <link>http://jeansung.github.io/blog/post/</link>
    <description>Recent content in Posts on Witty Writeups</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 16 Dec 2015 20:19:43 -0700</lastBuildDate>
    <atom:link href="http://jeansung.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>It&#39;s okay to cry and 15 Things I Learned My Senior Fall</title>
      <link>http://jeansung.github.io/blog/post/fall2015/</link>
      <pubDate>Wed, 16 Dec 2015 20:19:43 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/fall2015/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Summer 2015: Books</title>
      <link>http://jeansung.github.io/blog/post/summer-2015-books/</link>
      <pubDate>Sat, 05 Sep 2015 21:52:31 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/summer-2015-books/</guid>
      <description>&lt;p&gt;At long last, here is the final count of the books that I managed to read over the summer.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Books&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Author&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Review&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.goodreads.com/book/show/9627755-isla-and-the-happily-ever-after&#34;&gt;Isla and the Happily Ever After&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Stephanie Perkins&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;It&amp;rsquo;s a classic chick lit novel, the kind I use to read in high school but it was good. It was a good page turner and I got through it quickly, on a train and a plane.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://gladwell.com/david-and-goliath/&#34;&gt;David and Goliath&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Malcolm Gladwell&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A new book by one of my favorite authors. This was an excellent read. It&amp;rsquo;s another one of those books that weaves together stories you don&amp;rsquo;t hear about into patterns that don&amp;rsquo;t seem intuitive until they are. It&amp;rsquo;s cleverly woven together, backed by math and logic. I love these books. Also checkout his &lt;a href=&#34;http://gladwell.com/&#34;&gt;other books&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://freakonomics.com/2014/04/02/think-like-a-freak-our-new-book-out-on-may-13/&#34;&gt;Think Like A Freak&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Steven D. Levitt, Stephen J. Dubner&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Basically same review as above. I wish I could find more books like these. These are my favorite kind of books. Also checkout the &lt;a href=&#34;https://en.wikipedia.org/wiki/Freakonomics&#34;&gt;first&lt;/a&gt; and the &lt;a href=&#34;https://en.wikipedia.org/wiki/SuperFreakonomics&#34;&gt;second&lt;/a&gt; in the trilogy. I&amp;rsquo;m sad they won&amp;rsquo;t be writing anymore of these.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.npr.org/2014/07/26/334038029/lessons-in-essentialism-getting-more-out-of-life-by-doing-less&#34;&gt;Essentialism&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;I&amp;rsquo;ve been getting into this trend recently. Reading a lot of articles online during my lunch break. It&amp;rsquo;s a good read and it was fun to indulge myself before I go back to school where it&amp;rsquo;s less like essentialism and more like &amp;ldquo;do everything ism&amp;rdquo;. Ah, college.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.sophiekinsella.co.uk/book_detail.php?b=7&#34;&gt;Shopaholic to the Stars&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sophia Kinsella&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;I really only read this because I&amp;rsquo;ve read the previous god knows how many books (7th!!) in this series. It&amp;rsquo;s sort of trashy and sort of cheap, but it&amp;rsquo;s a very quick read.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.theghostmap.com/&#34;&gt;The Ghost Map&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Steven Johnson&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;I love this story. I did a presentation on the development of the sewage system in London and the 1848 Cholera outbreak. It was an indepth look at all aspects of the disease from more angles than I thought possible. &lt;strong&gt;Definitely&lt;/strong&gt; worth it. It was so great.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.goodreads.com/book/show/16143347-we-were-liars&#34;&gt;We Were Liars&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;E. Lockhart&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;It was a good read. A page turner, and a good book that was aimed at my demographic, for once. It was half a teen romance and half a teen family drama. The mystery in the pages really help keep it going. I got through this book on a train and a plane. It&amp;rsquo;s definitely a enthralling read.  However, retrospectively, I guess I have to agree with the &lt;a href=&#34;http://www.nytimes.com/2014/05/11/books/review/we-were-liars-by-e-lockhart.html?_r=0&#34;&gt;New York Times Review&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://gettingthingsdone.com/&#34;&gt;Getting Things Done&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;David Allen&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;I think I&amp;rsquo;ve read this before. It&amp;rsquo;s good, and I like organizational books, but the system is a bit complex and I think it would work better with a consistent work schedule rather than a busy and every shifting school schedule. People say to treat your job like a 9-5 but my job is more like a 10am-12am. Or something like that. Ahh, clinic.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;GRE Math, Verbal prep&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Kaplan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;This is because I decided for some reason it would be a good idea to sign up for and then study for and then take the August GRE. Oh silly me. It was fine. Just a long test. Luckily, I remembered most of my middle school and high school math. Shame there&amp;rsquo;s no calculus.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Using Google Forms to Budget</title>
      <link>http://jeansung.github.io/blog/post/google-form-budget/</link>
      <pubDate>Tue, 04 Aug 2015 08:30:38 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/google-form-budget/</guid>
      <description>

&lt;h4 id=&#34;before-the-summer:ff2dc01f53c5092c45e82cd6a8ccdc4a&#34;&gt;Before the summer&lt;/h4&gt;

&lt;p&gt;So the background for this is that I&amp;rsquo;ve been using Excel to budget my summer spending since the summer after high school. A lot has changed since then. Back in Summer 2012, I spent less than $1000 for the entire summer, lived at home and worked 7 hours / week at a minimum wage job. This summer, I&amp;rsquo;m living with friends in Seattle, working full time at an internship, spending about $4000 for the summer. I used to spend money by my parents credit card and cash. Now I have my own credit card. I pay rent and buy groceries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Then:&lt;/strong&gt; Excel or other tsv, tracked by week
&lt;br&gt;
&lt;strong&gt;Now:&lt;/strong&gt; Google Forms and Google spreadsheet&lt;/p&gt;

&lt;h4 id=&#34;summer-setup:ff2dc01f53c5092c45e82cd6a8ccdc4a&#34;&gt;Summer setup&lt;/h4&gt;

&lt;p&gt;I created a google form to track my expenses. I would gather all the relevant information that I thought was necessary. See below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/hiZ0hd3.png =516x140&#34; alt=&#34;&#34; /&gt;
&lt;br&gt;
&lt;br&gt;
&lt;img src=&#34;http://i.imgur.com/XivL2Nc.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;What I do: After I spend money, I collect my receipts and enter in the information into the form and submit.&lt;/p&gt;

&lt;h4 id=&#34;feedback:ff2dc01f53c5092c45e82cd6a8ccdc4a&#34;&gt;Feedback&lt;/h4&gt;

&lt;p&gt;The good: It&amp;rsquo;s uniform and I can capture information in a way that makes sense to me. I have tried using online categories before and having a lot of preset values makes it difficult to see what I actually am spending in categories that matter to me. It was really easy to set up, and Google Forms have a good summary view.&lt;/p&gt;

&lt;p&gt;The bad: It&amp;rsquo;s really hard, actually impossible to change the values you enter after you leave the form- if something gets messed up, there is no way to delete the data from the form entries. That makes the summary view useless because you can&amp;rsquo;t erase mistaken values. Additionally, the summary view is not customizable. Plus, there is a lot of work to do per transaction, especially since most of my spending is done by credit card these days. It would be nice if I could do the set up just once and then just track remotely.&lt;/p&gt;

&lt;p&gt;The next: For the fall, I am try using &lt;a href=&#34;https://www.mint.com/&#34;&gt;Mint&lt;/a&gt;. Stay tuned for a review on that!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Hugo Website Setup</title>
      <link>http://jeansung.github.io/blog/post/hugo-setup/</link>
      <pubDate>Mon, 03 Aug 2015 22:01:05 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/hugo-setup/</guid>
      <description>

&lt;h3 id=&#34;getting-started:64a00e54bc112d22b252689389accbce&#34;&gt;Getting Started&lt;/h3&gt;

&lt;p&gt;I was lured to use &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; because of its pretty front end on the main website and the promise that I could develop in Markdown. I have 3 websites, my &lt;a href=&#34;http://jeansung.github.io/frontpage/&#34;&gt;front page&lt;/a&gt;, my &lt;a href=&#34;http://jeansung.github.io/blog/&#34;&gt;blog&lt;/a&gt; and my &lt;a href=&#34;http://jeansung.github.io/Projects/&#34;&gt;portfolio&lt;/a&gt; and the first two are setup through hugo. Here&amp;rsquo;s my setup story.&lt;/p&gt;

&lt;h3 id=&#34;my-setup:64a00e54bc112d22b252689389accbce&#34;&gt;My setup&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m hosting it on github pages. Here&amp;rsquo;s my &lt;a href=&#34;https://github.com/jeansung/MyPersonalPage/wiki&#34;&gt;tutorial&lt;/a&gt; how to set that up. I&amp;rsquo;m using hugo with github pages. Here&amp;rsquo;s the &lt;a href=&#34;http://gohugo.io/tutorials/github-pages-blog/&#34;&gt;tutorial&lt;/a&gt; I used.&lt;/p&gt;

&lt;p&gt;When I test my changes, I run the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server --watch --buildDrafts --theme=material-design
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command runs a local server for the website to sit on, build drafts, automatically reloads pages and then applies the theme. You can delete the &lt;code&gt;public/&lt;/code&gt; folder to force the theme to reload completely.&lt;/p&gt;

&lt;p&gt;When I&amp;rsquo;m ready to publish, I use a modified version of the tutorial&amp;rsquo;s demo &lt;code&gt;deploy.sh&lt;/code&gt; script.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

# Black        0;30     Dark Gray     1;30
# Red          0;31     Light Red     1;31
# Green        0;32     Light Green   1;32
# Brown/Orange 0;33     Yellow        1;33
# Blue         0;34     Light Blue    1;34
# Purple       0;35     Light Purple  1;35
# Cyan         0;36     Light Cyan    1;36
# Light Gray   0;37     White         1;37

CYAN=&#39;\033[0;36m&#39;
NC=&#39;\033[0m&#39;

echo -e &amp;quot;${CYAN} Deploying updates to GitHub... ${NC}&amp;quot;


# Build the project. 
hugo --theme material-design

# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;Rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master
git subtree push --prefix=public git@github.com:jeansung/blog.git gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;my-thoughts:64a00e54bc112d22b252689389accbce&#34;&gt;My thoughts&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s not all rainbows and puppies. This set up is definitely better than my last set up, which consisted mainly of using github pages to host the website and then using &lt;code&gt;HTML&lt;/code&gt; tinkering to create the content. That was hard coded and unsustainable. The templates here make it much easier to change only what I need to. However, the &lt;code&gt;git subtree&lt;/code&gt; workflow is very messy when it goes wrong and I had to &lt;code&gt;rm -rf&lt;/code&gt; some of the earlier repos that got messed up. My setup really doesn&amp;rsquo;t use the version control in the sense of branching and rolling back. It&amp;rsquo;s almost entirely a linear setup, so that works. But I could imagine more heartache if you needed to &lt;code&gt;git revert&lt;/code&gt; some files. Also, I need to consolidate the websites to one site, but that&amp;rsquo;s for a different day.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resume Advice</title>
      <link>http://jeansung.github.io/blog/post/resume-tips-newbie/</link>
      <pubDate>Mon, 03 Aug 2015 21:52:16 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/resume-tips-newbie/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m not a professional resumé writing expert. But I&amp;rsquo;ve been getting practice updating mine for about 4 years now, since the senior year of high school (when applying to colleges) to now when I&amp;rsquo;m about to look for a real full time job on my way out of college (one more year left).&lt;/p&gt;

&lt;p&gt;For reference, my &lt;a href=&#34;https://github.com/jeansung/ResumeCollection&#34;&gt;resume collection&lt;/a&gt; my &lt;a href=&#34;https://github.com/jeansung/ResumeTemplate&#34;&gt;resume templates&lt;/a&gt;, or my &lt;a href=&#34;https://github.com/jeansung/ResumeCollection/raw/master/master_resume/JEANSUNG_RESUME.pdf&#34;&gt;current resume&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here is my advice for how to present a summer experience, a project you did on a resume so that all the important information is communicated.&lt;/p&gt;

&lt;h3 id=&#34;what-you-did:bd80578ac8a5ed369aea3c62f0d851c4&#34;&gt;What you did&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s pretty obvious but you need to write about what you actually do. This is a description of the job that was performed, the piece of software developed or created. For example,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-  Developed educational iPad game for middle school students&lt;/li&gt;
&lt;li&gt;-  Wrote a client library for XYZ API&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;how-you-did-it:bd80578ac8a5ed369aea3c62f0d851c4&#34;&gt;How you did it&lt;/h3&gt;

&lt;p&gt;Recruiters, in my experience like seeing what sort of technology was used. It lends legitimacy to your project (are you using the right tool for the job? hopefully!) and backs up your skills section (where did you use your python skills? Oh, this project!). This is about the programming languages used, the tools, technologies, APIs and libraries that your project relies on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;- utilizing Java and JMonkey Game Engine&lt;/li&gt;
&lt;li&gt;- with Python and Pandas and Numpy&lt;/li&gt;
&lt;li&gt;- using Google BigQuery and gcs Command Line tools&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;why-it-matters:bd80578ac8a5ed369aea3c62f0d851c4&#34;&gt;Why it matters&lt;/h3&gt;

&lt;p&gt;Cool project, but why? Cool work at your summer job, but why? Why were you necessary? Why were you a worthwhile intern or why was your project interesting? For a job, it&amp;rsquo;s always nice to have something about what your work did to help the company&amp;rsquo;s bottom line? If you have specific numbers, use them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;- implemented xyz that saved 2 hours / week of employee time&lt;/li&gt;
&lt;li&gt;- presented research to save company time and resources from unviable path&lt;/li&gt;
&lt;li&gt;- improved latency from 200ms to 2ms&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For a project, motivate what you did by showing why the thing you built was useful or explain who could use it. This can also help you think about the usability of your tool.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;- educational game for middle school students to help them with their math skills&lt;/li&gt;
&lt;li&gt;- created xyz with a user interface that reduced complexity of the front end view presented to customers&lt;/li&gt;
&lt;li&gt;- connected X and Y to simplify using tool Z&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;note:bd80578ac8a5ed369aea3c62f0d851c4&#34;&gt;Note&lt;/h3&gt;

&lt;p&gt;If you are writing about a summer job for a tech company, be sure to check with your manager or your HR team about what you can and cannot say about what you did. Especially if you worked for a national lab or signed a really long NDA. Getting a new job is good! Getting sued for breach of contract and leaking trade secrets is not.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to ask for help: Then &amp; Now</title>
      <link>http://jeansung.github.io/blog/post/how-to-ask-tech-q/</link>
      <pubDate>Sun, 26 Jul 2015 21:52:31 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/how-to-ask-tech-q/</guid>
      <description>&lt;p&gt;Someone at work gave me some helpful advice on Friday and I realized that there is another step in learning how to ask questions.&lt;/p&gt;

&lt;p&gt;The first stage in asking questions is the &amp;ldquo;help it&amp;rsquo;s broken&amp;rdquo; stage. It&amp;rsquo;s pretty much what it sounds like - something isn&amp;rsquo;t work, it didn&amp;rsquo;t compiled, maybe there was a seg fault, god forbid a merge conflict and you just give up immediately and ask for help. It&amp;rsquo;s what I call the &amp;ldquo;CS 5 on the first day&amp;rdquo; level of asking for help. It&amp;rsquo;s not particularly sophisticated as methods go because it doesn&amp;rsquo;t help the person who you&amp;rsquo;re asking for help from understand anything about your problem. It&amp;rsquo;s only really okay if you don&amp;rsquo;t expect to have a hand in fixing the problem or if you don&amp;rsquo;t know how else to ask for help. A slightly more sophisticated version of this: &amp;ldquo;helps it seg faulted or a I got a null pointer exception.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The second stage of asking for help is &amp;ldquo;help its broken and I tried x, y, z&amp;rdquo;. This is a  more advanced way of asking questions. For a tutor it&amp;rsquo;s nice because it brings me up to speed oh what has been tried already so I don&amp;rsquo;t waste your time. It&amp;rsquo;s also more advanced because this means you at least tried something. A lot of problems can be solved with a simple print statement, a check for the empty case, some simple debugging. But that&amp;rsquo;s for another post.&lt;/p&gt;

&lt;p&gt;That brings me to last Friday. I realized that asking for help at a job is different from asking for help from another fellow software engineer. At tutoring for classes, it is my job to help the students. Even if they don&amp;rsquo;t form the questions well, it&amp;rsquo;s still my job to help. I like helping. Part of my helping is also helping them form the questions. The point is that I&amp;rsquo;m there to help. I work on homework when I don&amp;rsquo;t have questions but for the most part, I know the solution and I know the kinds of problem they are stuck on. But at work it&amp;rsquo;s not the same. Yeah, the team is there when the newbie or the intern (me) needs help. And it definitely is worth it to ask questions instead of struggling for an entire morning on something related to the build that is very team specific. However, the team is composed of software engineers who themselves have stuff to do. So this brings me to the newest type of questions - distilling your question to the essence: What is wrong, and what is the essence of what you don&amp;rsquo;t understand, what you need from the other person. This way, you make sure that you spend their time well and don&amp;rsquo;t waste it asking small question after small question. This is especially important for software engineers who may have their day broken up enough by meetings which makes it hard to do critical thinking that leads to building better software.&lt;/p&gt;

&lt;p&gt;The essence is that you need to think about the other person- how can you help them best help you. Another lesson in empathy. Stay tuned for a post about &amp;ldquo;things I learned being an adult for the summer.&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git Hacks - WIP Edition</title>
      <link>http://jeansung.github.io/blog/post/git-hacks-wip/</link>
      <pubDate>Tue, 21 Jul 2015 22:05:06 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/git-hacks-wip/</guid>
      <description>

&lt;p&gt;Today&amp;rsquo;s post is about some quick &lt;code&gt;git&lt;/code&gt; command line tricks if you are doing some work in progress (WIP).&lt;/p&gt;

&lt;p&gt;Scenario: You are working on the &lt;code&gt;master&lt;/code&gt; branch and then realize you are going to have to test these changes on a bigger scale (perhaps cross repo) and thus new to push your changes to a new branch.&lt;/p&gt;

&lt;p&gt;Setup: On master branch, some &lt;code&gt;git add&lt;/code&gt; have been made, no commits yet.&lt;/p&gt;

&lt;p&gt;Solution:&lt;/p&gt;

&lt;p&gt;First, remove all the staged files from the master branch. Use &lt;code&gt;git rm --cached&lt;/code&gt; and then either add the file path or the directory path to be removed. You can use &lt;code&gt;git status&lt;/code&gt; to find out what files are not staged yet. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Originally, everything is up to date
# but on the wrong branch 
git status 
On branch feature-branch
Your branch is up to date with origin/master
nothing to commit, working directory clean 

# Remove those files 
git rm --cached foo/
git rm --cached bar/foo.java

# Good, ready to be added to another branch
git status 
Changes not staged for commit:
	modified: foo/
Untracked files:
	bar/foo.java
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure to have the &lt;code&gt;--cached&lt;/code&gt; flag because that means that you are removing the file from the git index to reset the tracking but not the actual file from your local file system. You don&amp;rsquo;t want that, because you are about to push these changes to another branch.&lt;/p&gt;

&lt;p&gt;Second, checkout a new branch. The cool thing is that the current state of files follows you to the current branch. Then, push to remote repo, setting up tracking to be from the origin (usual use case).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git checkout -b feature-branch
git add .
git commit -m &amp;quot;Pushing changes to local feature branch&amp;quot;
git push -u origin feature-branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last command, &lt;code&gt;git push -u origin feature-branch&lt;/code&gt; sets up the remote branch to track changes from. In the future, you only need to write &lt;code&gt;git push -u feature-branch&lt;/code&gt; and your changes will be pushed to the remote branch of the same name as your local branch.&lt;/p&gt;

&lt;h3 id=&#34;sources:9325ce92720b6ac61078754c07b964c3&#34;&gt;Sources&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/1351567/putting-uncommitted-changes-at-master-to-a-new-branch-by-git&#34;&gt;Pushing uncommitted changes to a new branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/7434449/why-use-git-rm-to-remove-a-file-instead-of-rm&#34;&gt;Using git rm &amp;ndash;cached &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The only books I read (anymore)</title>
      <link>http://jeansung.github.io/blog/post/good-books/</link>
      <pubDate>Fri, 17 Jul 2015 18:19:43 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/good-books/</guid>
      <description>&lt;p&gt;I used to read a lot. I grew up reading lots of books from fantasy (all of Harry Potter like many) to cheesy teen romance novels. I even read a book once (okay the entire series) that was written in the style of an IM conversation.&lt;/p&gt;

&lt;p&gt;In high school I read the classics - To Kill a Mockingbird, Catch-22, Hamlet, for English, which I liked but only because we had to analyze “deeper meaning” and that was more fun than I knew it could be (but that’s a story for another time).&lt;/p&gt;

&lt;p&gt;But not so much recently. I have to read textbooks during the year - so Physical Chemistry, Linear Algebra and Operating Systems when school is in session. But not really during breaks or for fun. I read articles online and magazines on plane and yes, I guess that does count as reading. But there is something about reading good old fashioned book that I just haven’t done in what seems like forever.&lt;/p&gt;

&lt;p&gt;Luckily, I got a chance to kickstart the reading habit this summer because of my 40 minute commute (well it’s an hour back in rush hours) by bus. And S let me borrow her old nook. And the library has free e books to rent. Anyways, it came together. And I now remember the only books I can get through anymore fall into 3 categories.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Cheesy teen romance novels&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;That’s how I got through the 40 minutes on the light rail to the airport&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Books about time management, organization&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;My not so secret obsession&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Books that fall under the “common misconception” category See below&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;The last category is interesting because it’s my favorite category. I tell people my favorite book is Catch - 22 which is true but it’s not the type of book I like to read. I like to read books that are stories. Stories about how the way we think is intuitive, which is wrong. These are books that I like to think are born of the Common misconceptions page on Wikipedia.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Two such series which I have read and loved are Freakanomics (I’m on the third one) and Malcom Galdwell’s books (all of them). I like them because they are good stories. Stories about how looking at things from a different angle often yields an interesting and meaningful response. And stories about how math is important. And data. And the difference between correlation and causation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why I did this</title>
      <link>http://jeansung.github.io/blog/post/why-I-did-this/</link>
      <pubDate>Thu, 16 Jul 2015 17:54:38 -0700</pubDate>
      
      <guid>http://jeansung.github.io/blog/post/why-I-did-this/</guid>
      <description>&lt;p&gt;Partly because I was curious about newfangled technology and partly because I need to try something out for more than 20 minutes.&lt;/p&gt;

&lt;p&gt;I was eating lunch at work and looking at articles about new technology components- fancy web engines and really pretty interfaces. I’m always enthralled and I always think I should try it but it never gets very far. I start, the supposedly easy to use tool doesn’t compile twenty minutes in or I grow bored and I leave.&lt;/p&gt;

&lt;p&gt;Hugo is the newfangled fancy thing I am trying and it is not easy. The front page is pretty and it lures you in. The defaults work pretty well but then you start to customize it and there are gaps in the documentation. Use &lt;code&gt; {{ delimit .Params.categories “, ” }} &lt;/code&gt; to create comma separated categories. Oh really? Where do I stick this? It looks like it’s a function so I stuck it with the other functions in the layouts (overriding the themes defaults) but it wouldn’t render. I’ve spent about 1 hour on this issue already and it really shouldn’t be this hard. But part of this summer is learning about how to just keep moving forward in the face of all the little details being wrong and not correctly configured. Which I get is how things get done. But I don’t like it.&lt;/p&gt;

&lt;p&gt;I also wanted some place to write up cool solutions that I had pieced together from various stack overflow answers, obscure documentation and creative tinkering. A place to feature mini projects I did that weren’t resume or portfolio worthy but could be helpful nonetheless.&lt;/p&gt;

&lt;p&gt;There’s not really a plan for the blog but the basic layout is:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Category&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Explanations&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Musings&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thoughts about things. Simply, really. Posts about ideas I stumble across, books I’ve read, things I’ve learned, etc.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Jean’s Journey&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;This is my blog after all. Posts about seasonal routines and goals as well as tech related experiences (like GHC 2015!!)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Projects&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A place to feature things I’ve built.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Spotlights and Solutions&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;My favorite category. Writeups for problems I’ve fixed and spotlights of cool technologies that solve problems I encounter.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
  </channel>
</rss>